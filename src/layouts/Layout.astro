---
import { SITE, GISCUS, LINKS } from "@config";
import "../styles/base.css";
import GoogleFont from "./GoogleFont.astro";
import { ViewTransitions } from 'astro:transitions';

const googleSiteVerification = import.meta.env.PUBLIC_GOOGLE_SITE_VERIFICATION;

export interface Props {
  title?: string;
  postSlug?: string;
  author?: string;
  description?: string;
  ogImage?: string;
  pubDatetime?: Date;
  modDatetime?: Date;
}

const {
  title = SITE.title,
  author = SITE.author,
  description = SITE.desc,
  pubDatetime,
  modDatetime,
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { postSlug } = Astro.props;
const socialImageName = postSlug ? postSlug : "banner";
const socialImageURL = new URL(
  `/images/${socialImageName}.png`,
  Astro.url.origin
).href;
---

<!DOCTYPE html>
<html lang="en" data-theme="dark">
  <head>
    <ViewTransitions />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />
    <link 
      rel="alternate"
      type="application/rss+xml"
      title={SITE.title}
      href="/rss.xml" />
    <link
      rel="alternate"
      type="application/rss+xml"
      title={LINKS.title}
      href="/links/rss.xml" />

    <!-- General Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content={author} />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={socialImageURL} />

    <!-- Article Published/Modified time -->
    {
      pubDatetime && (
        <meta
          property="article:published_time"
          content={pubDatetime.toISOString()}
        />
      )
    }
    {
      modDatetime && (
        <meta
          property="article:modified_time"
          content={modDatetime.toISOString()}
        />
      )
    }

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />

    <GoogleFont />

    {
      // If PUBLIC_GOOGLE_SITE_VERIFICATION is set in the environment variable,
      // include google-site-verification tag in the heading
      // Learn more: https://support.google.com/webmasters/answer/9008080#meta_tag_verification&zippy=%2Chtml-tag
      googleSiteVerification && (
        <meta
          name="google-site-verification"
          content={googleSiteVerification}
        />
      )
    }

    {
      postSlug && (
        <script
          src="https://giscus.app/client.js"
          data-repo={GISCUS.repo}
          data-repo-id={GISCUS.repoId}
          data-category={GISCUS.category}
          data-category-id={GISCUS.categoryId}
          data-mapping="pathname"
          data-strict="0"
          data-reactions-enabled="1"
          data-emit-metadata="0"
          data-input-position="bottom"
          data-theme="dark"
          data-lang="en"
          crossorigin="anonymous"
          async
        />
      )
    }
  </head>
  <body>
    <slot />
  </body>
</html>
